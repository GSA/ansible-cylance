---
- name: checking for agent install
  win_service:
    name: cylancesvc
  register: agent

- debug:
    msg: "cylance agent not found (installing)"
  when: not agent.exists

- debug:
    msg: "cylance agent found (skipping install)"
  when: agent.exists

- name: create {{ windows_agent_log }} directory
  win_file:
    path: '{{ windows_agent_log }}'
    state: directory
  when: not agent.exists

- name: install cylance agent (windows)
  win_package:
    path: '{{ windows_cylance_agent_url }}'
    state: present
    log_path: '{{ windows_agent_log }}\cylance_log.txt'
    product_id: '{{ windows_cylance_product_id }}'
    arguments:
  when: not agent.exists

- name: register cylance agent (windows)
  win_command: .\cylancesvc.exe /register /PIDKEY='{{ agent_secrets.cylance_pid_id }}' /enable
  args:
    chdir: '{{ windows_cylance_agent_path }}'
  when: not agent.exists

- name: verify cylance started
  win_service:
    name: cylancesvc
    state: started
    start_mode: auto
